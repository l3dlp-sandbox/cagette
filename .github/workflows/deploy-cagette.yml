name: Deploy

on:
  push:
    branches:
      - feature/*
      - preprod

env:
  REGISTRY_NAME: alilo
  CLUSTER_RESOURCE_GROUP: alilo-dev
  NAMESPACE: dev-playground
  APP_NAME: neko
  KEEP_AT_MOST_IMAGES: 3

jobs:
  docker-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout cagette
        uses: actions/checkout@v2

      # see chart https://github.com/actions/checkout#checkout-multiple-repos-private
      #- name: Checkout cagette-pro
      #  uses: actions/checkout@v2
      #  with:
      #    repository: bablukid/cagette-pro
      #    path: devLibs/cagette-pro
      #    token: ${{ secrets.GH_PAT }}

      - name: Checkout record-macros
        uses: actions/checkout@v2
        with:
          repository: bablukid/record-macros
          path: devLibs/record-macros

      - name: Checkout sugoi
        uses: actions/checkout@v2
        with:
          repository: bablukid/sugoi
          path: devLibs/sugoi

      - name: Connect to Azure Container registry (ACR)
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.REGISTRY_NAME }}.azurecr.io
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: build docker image
        run: |
          set -e -u
          PROJ=$(echo "${{ github.ref }}" | perl -F/ -a -e 'print $F[-1]')
          TAG="$PROJ-$GITHUB_RUN_NUMBER"
          docker build . -t ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.APP_NAME }}:$TAG
          docker push ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.APP_NAME }}:$TAG

  deploy-on-k8s:
    needs: docker-build
    runs-on: ubuntu-latest
    steps:
      - name: retrieve project name
        run: |
          PROJ=$(echo "${{ github.ref }}" | perl -F/ -a -e 'print $F[-1]')
          # see https://docs.github.com/en/actions/reference/workflow-commands-for-github-actions#setting-an-environment-variable
          echo "project to update: $PROJ"
          echo "project_name=$PROJ" >> $GITHUB_ENV

      # see https://github.com/actions/checkout#checkout-multiple-repos-private
      - name: Checkout chart
        uses: actions/checkout@v2
        with:
          repository: CagetteNet/kubernetes
          token: ${{ secrets.GH_PAT }}
          ref: main

      - name: set azure credentials to access cluster
        uses: azure/aks-set-context@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'
          resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}
          cluster-name: 'alilo-dev'
        id: login

      - name: setup nodemailer SMTP credentials
        run: |
          npm install
          node scripts/generate-fake-smtp-credentials.js > smtp.env
          kubectl -n $NAMESPACE get secret ${{ env.project_name }}-smtp || kubectl -n $NAMESPACE create secret generic ${{ env.project_name }}-smtp --from-file=smtp.env

      - name: setup db-pw secret
        run: |
          kubectl -n $NAMESPACE get secret ${{ env.project_name }}-db-pw || kubectl -n $NAMESPACE create secret generic ${{ env.project_name }}-db-pw --from-literal=password="$(openssl rand -hex 10)"

      - name: deploy on cluster
        run: |
          TAG="${{ env.project_name }}-$GITHUB_RUN_NUMBER"
          helm -n $NAMESPACE upgrade --install --reuse-values --set image.tag.$APP_NAME=$TAG ${{ env.project_name }} cagette-chart/

      - name: remove old ${{ env.project_name }} images
        run: |
          az login --service-principal -u ${{ secrets.REGISTRY_USERNAME }} \
             -p ${{ secrets.REGISTRY_PASSWORD }} --tenant francoisalilo.onmicrosoft.com
          for tag in $(az acr repository show-tags -n alilo --repository $APP_NAME --orderby time_asc --output tsv | grep ^${{ env.project_name }} | perl -E "my @l = <STDIN>;  while (@l > $KEEP_AT_MOST_IMAGES) { print shift @l };" )
          do
              echo "Deleting image $APP_NAME:$tag"
              az acr repository delete -n alilo --yes --image $APP_NAME:$tag
          done

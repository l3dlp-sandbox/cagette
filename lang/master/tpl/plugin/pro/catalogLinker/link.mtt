::use 'plugin/pro/design.mtt'::

<style>
    .grey{
        background-color: #f8f4e5;
    }
</style>

<div class="col-md-12">
	<div class="article">
		<h2 style="margin-top:0">Relier des catalogues</h2>

        <p>
            Afin de relier le catalogue de droite à votre catalogue producteur à gauche, vous devez établir les correspondances de produit d'un catalogue à l'autre.
        </p>
            
        <table class="table table-bordered" id="linkageTable">
            <tr style="text-decoration: underline;">
                <td class="text-center">Catalogue de votre espace producteur :</td>
                <td class="text-center">Catalogue à relier : </td>
            </tr>
            <tr>
                <th class="col-md-5">
                    <i class="icon icon-book"></i> ::pcatalog.name::
                </th>
                <th class="col-md-5 grey">
                    <i class="icon icon-book"></i> ::catalog.name:: <br/>
                    dans le ::theme.groupWordingShort:: "<a href="/group/::catalog._group.id::" target="_blank">::catalog._group.name::</a>"
                </th>
                <th class="col-md-2">

                </th>
            </tr>

            ::foreach pp pcatalog.getProducts()::
                <tr>
                    <td><b>
                        ::pp.product.name::
                    </b></td>
                    <td class="grey"></td>
                    <td></td>
                </tr>
                ::foreach catOff pp.offers::
                <tr>
                    <td style="padding-left: 48px;">
                        ::catOff._offer.getName()::   - ::catOff.price:: &euro;
                    </td>
                    <td class="grey">
                        <select name="offer::catOff._offer.id::" id="offer::catOff._offer.id::" class="form-control" size="1">
                            <option value="0" selected="">-</option>
                            ::foreach p catalog.getProducts(true)::
                            <option value="::p.id::" >::p.getName():: - ::p.price:: &euro;</option>
                            ::end::                    
                        </select>
                    </td>
                    <td>
                        <div class="alert alert-warning" id="offerMsg::catOff._offer.id::" style="display: none;"></div>
                    </td>
                </tr>
                ::end::
            ::end::


        </table>

        <div class="alert alert-danger" id="msg" style="width:75%;margin:auto;margin-bottom:24px;display: none;">
            
        </div>
        <p class="text-center">            
            <a id="validate" class="btn btn-primary btn-lg">Valider</a>
        </p>
            
	</div>		
	
</div>

<script>
//<![CDATA[

//populate offers list
var offers = [];
::foreach pp pcatalog.getProducts()::
    ::foreach catOff pp.offers::        
        offers.push({name:"::catOff._offer.getName()::",id: ::catOff._offer.id::,price: ::catOff.price::});
    ::end::
::end::

//populate products list
var products = [];
::foreach p catalog.getProducts(true)::
    products.push({name:"::p.getName()::",id: ::p.id::,price: ::p.price::});
::end::

var msg = function(txt){
    var msgDiv = document.querySelector("#msg");
    if(txt==null){
        msgDiv.innerHTML = "";
        msgDiv.style.display = "none";
    }else{
        msgDiv.innerHTML = "<i class=\"icon icon-info\"></i> "+txt;
        msgDiv.style.display = "block";
    }
}

var offerMsg = function(offerId,txt){
    var offerMsgDiv = document.querySelector("#offerMsg"+offerId);
    if(txt==null){
        offerMsgDiv.innerHTML = "";
        offerMsgDiv.style.display = "none";
    }else{
        offerMsgDiv.innerHTML = "<i class=\"icon icon-info\"></i> "+txt;
        offerMsgDiv.style.display = "block";
    }
}

var findProduct = function(id){
    return products.find(function(p){return p.id==id});
};

var findOffer = function(id){
    return offers.find(function(p){return p.id==id});
};


var onChooseProduct = function(e){

    var productId = e.target.value;
    var offerId = e.target.name.substr(5);
    if(productId==0) {
        offerMsg(offerId,null);
        return;
    }    
    
    console.log("offer "+offerId);
    console.log("product "+productId);
    var product = findProduct(productId);
    var offer = findOffer(offerId);

    if(product.price != offer.price){
        offerMsg(offerId,"Attention les prix ne concordent pas !");
    }else{
        offerMsg(offerId,null);
    }

};

//create new offer in pcatalog from product via REST
var createNewOffer = function(productId){
    var pcatalogId = ::pcatalog.id::;
    console.log("create offer for "+productId+" in pcatalog "+pcatalogId);

    let req = new Request('::vendor.getURL()::/catalogLinker/createNewOffer/'+productId+'/'+pcatalogId);

    fetch(req).then(function(res){
        console.log(res);
        if (!res.ok) {
            throw new Error(`erreur HTTP! statut: ${res.status}`);
        }
        return res.json();
    }).then(function(res){
        
        console.log(res);
        let offer = res.offer;
        offers.push(offer);

        //clone product row 
        var rowToClone = document.querySelectorAll("#linkageTable tr")[2];
        var newRow = rowToClone.cloneNode(true);
        newRow.querySelectorAll('td')[0].innerHTML = "<b>"+offer.name+"</b>";
        document.querySelector("#linkageTable").appendChild(newRow);


        //clone offer row 
        var rowToClone = document.querySelectorAll("#linkageTable tr")[3];
        var newRow = rowToClone.cloneNode(true);
        newRow.querySelectorAll('td')[0].innerHTML = offer.name+" - "+offer.price+" &euro;";
        let select = newRow.querySelector('td>select');
        select.name = "offer"+offer.id;
        select.id = "offer"+offer.id;        
        select.value = productId;
        document.querySelector("#linkageTable").appendChild(newRow);

        check();
        
    }).catch(function(err){
        msg(err.message);
    });
    
};

for(offer of offers){
    document.querySelector("#offer"+offer.id).onchange = onChooseProduct;        
}

var check = function(){
    
    console.log("VALIDATE");

    var linkage = new Map();
    var errors = [];

    //populate linkage map
    for( off of offers){
        var productId = document.querySelector("#offer"+off.id).value;
        if(productId!=null && productId!=0) linkage.set(productId,off.id);
    }

    console.log(linkage);
    
    //check prices match
    for( k of linkage.keys()){

        var p = findProduct(k);
        var off = findOffer(linkage.get(k));
        
        if(p==null || off==null){
            console.log("linkage of key "+k+" is broken");
            off.error = null;
        }else if(p.price != off.price){
        //    off.error =  "Attention les prix ne concordent pas !";
        }else{
            console.log("no prob on key "+k);
            off.error = null;
        }

    }

    //check that every product has been mapped to an offer
    for( p of products){

        // var findLinkage = null;
        // for ( k of linkage.keys()){       
            //console.log("k "+k+" , v "+linkage.get(k));
            // console.log("pid "+p.id);
            // if( k==p.id){
            //     findLinkage = linkage.get(k);
            //     break;
            // }            
        //}
        if(linkage.get(String(p.id))==null){
            errors.push("<p>Le produit <b>"+p.name+"</b> n'a pas été relié à une offre de votre catalogue.<br/><a onclick='createNewOffer("+p.id+")' class='btn btn-default btn-sm'>Ajouter ce produit à mon catalogue</a></p>");            
        }
    }

    if(errors.length==0){
        msg();
    }else{
        msg(errors.join("<br/>"));
    }

    //display offer errors
    // for( off of offers ){        
    //     if(off.error!=null){
    //         offerMsg(off.id,off.error);
    //     }else{
    //         offerMsg(off.id,null);
    //     }        
    // }    

    //can we submit ?
    var submit = true;
    // for( off of offers ){        
    //     if(off.error!=null){
    //         console.log("error on off "+off.id+", we cant submit");
    //         submit = false;
    //         break;
    //     }
    // }
    if(errors.length>0){
        console.log("there is errors, we cant submit");
        submit = false;
    }
    
    return {submit:submit,linkage:linkage};
};   

document.querySelector("#validate").onclick = function(){
    var r = check();

    if(r.submit==true){
        console.log("SUBMIT !");

        var req = "?";
        var params = [];
        for( k of r.linkage.keys()){
            params.push( "p"+k+"="+r.linkage.get(k) );
        }
        params.push("token=::token::");
        req += params.join("&");

        document.location.href = "::vendor.getURL()::/catalogLinker/submitLinkage/::catalog.id::/::pcatalog.id::"+req;
    }

};

//]]>
</script>


::end::



	
	
	
	
	